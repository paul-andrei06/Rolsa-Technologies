@{
    Layout = "_Layout";  /* Adjust the layout path if needed */
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Accessibility Options</title>

    <style>
        /* -- used to store as a variable */
        :root {
            --background-color: white;
            --text-color: black;
        }

        /* Dark Mode styles */
        .dark-mode {
            --background-color: #121212;
            --text-color: white;
        }

        /* High contrast mode */
        .high-contrast {
            --background-color: black !important;
            --text-color: yellow !important;
        }

        /* General body styles */
        body {
            background-color: var(--background-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
            font-size: 16px; /* Default font size */
        }

        h1, h2, h3, h4, h5, h6, p, ul, li {
            color: var(--text-color);
        }

        /* Accessibility Options Section */
        .accessibility-container {
            margin: 20px;
        }

        button {
            margin: 10px;
            padding: 10px 15px;
            font-size: 16px;
            cursor: pointer;
        }

        /* Dark Mode Button */
        .dark-mode-button {
            background-color: #333;
            color: white;
        }

        /* High Contrast Mode Button */
        .high-contrast-button {
            background-color: yellow;
            color: black;
        }

        .increase-font, .decrease-font {
            background-color: #4CAF50;
            color: white;
        }

        /* Footer styles */
        footer {
            background-color: var(--background-color);
            color: var(--text-color);
            padding: 20px;
            text-align: center;
            transition: background-color 0.3s, color 0.3s;
        }

            footer a {
                color: var(--text-color);
                text-decoration: none;
            }

                footer a:hover {
                    color: #FFD700; /* Optional: gold color for links on hover */
                }

        /* Social media icons */
        .social-icons a {
            margin: 0 10px;
            color: var(--text-color);
            font-size: 20px;
            text-decoration: none;
        }

            .social-icons a:hover {
                color: #FFD700;
            }
    </style>
</head>
<body>
    <div class="accessibility-container">
        <h1>Accessibility Options</h1>

        <!-- Buttons for Dark Mode, High Contrast, and Font Size Adjustments -->
        <button class="dark-mode-button" onclick="toggleDarkMode()">Toggle Dark Mode</button>
        <button class="high-contrast-button" onclick="toggleHighContrast()">Toggle High Contrast</button>
        <button class="increase-font" onclick="changeFontSize('increase')">Increase Font Size</button>
        <button class="decrease-font" onclick="changeFontSize('decrease')">Decrease Font Size</button>
    </div>



    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const body = document.body;

            // Dark Mode Toggle Function
            function toggleDarkMode() {
                body.classList.toggle("dark-mode");
                localStorage.setItem("theme", body.classList.contains("dark-mode") ? "dark" : "light");
            }

            // Check for Dark Mode preference
            if (localStorage.getItem("theme") === "dark") {
                body.classList.add("dark-mode");
            }

            // High Contrast Toggle Function
            function toggleHighContrast() {
                body.classList.toggle("high-contrast");
                localStorage.setItem("contrastMode", body.classList.contains("high-contrast") ? "high-contrast" : "normal");
            }

            // Check for High Contrast preference
            if (localStorage.getItem("contrastMode") === "high-contrast") {
                body.classList.add("high-contrast");
            }

            // Font Size Adjustment Function
            function changeFontSize(action) {
                let currentSize = parseInt(window.getComputedStyle(body).fontSize);
                if (action === 'increase') {
                    currentSize += 2;
                } else if (action === 'decrease') {
                    currentSize -= 2;
                }
                body.style.fontSize = currentSize + "px";
                localStorage.setItem("fontSize", currentSize + "px");
            }

            // Apply saved font size from localStorage if exists
            const savedFontSize = localStorage.getItem("fontSize");
            if (savedFontSize) {
                body.style.fontSize = savedFontSize;
            }

            // Make functions globally accessible
            window.toggleDarkMode = toggleDarkMode;
            window.toggleHighContrast = toggleHighContrast;
            window.changeFontSize = changeFontSize;
        });
    </script>
</body>
</html>